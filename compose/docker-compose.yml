version: "3.9"
services:
  nginx:
    build:
      dockerfile: Dockerfile
      context: ../nginx
    environment:
      BASE_DOMAIN: "notifier.devlocal"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    expose:
      - 80
      - 443
    links:
      - api
    volumes:
      - ../nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro

  db:
    image: mariadb:10.7.3
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_HOST=db
      - TZ=Europe/Berlin
    ports:
      - "3309:3306"
    restart: always

  rabbitmq:
    image: rabbitmq:3.11-alpine
    volumes:
      - ./data/rabbitmq_data:/var/lib/rabbitmq
    restart: always
    ports:
      - "5672:5672"

  api:
    restart: always
    image: api-image
    build:
      dockerfile: compose/Dockerfile
      context: ./..
#    command: gunicorn main.asgi:application --reload --bind :8000 -k uvicorn.workers.UvicornWorker --reload
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../notifier:/app
    ports:
      - "8020:8000"
    env_file:
      - env.properties
    depends_on:
      - db

  celery_worker:
    command: celery -A main worker -l info
    depends_on:
      - api
      - db
      - rabbitmq
    hostname: celery_worker
    image: api-image
    env_file:
      - env.properties
    volumes:
      - ../notifier:/app
    restart: always

  celery_beat:
    command: celery -A main beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - api
      - db
      - rabbitmq
    hostname: celery_beat
    image: api-image
    env_file:
      - env.properties
    volumes:
      - ../notifier:/app
    restart: always